{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/index.mjs","../../src/stores/taxonomies.ts","../../src/stores/custom_taxonomies.ts","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/d3-color/src/define.js","../../node_modules/d3-color/src/color.js","../../src/views/components/TSNE.svelte","../../src/views/components/forms/Button.svelte","../../node_modules/svelte-bootstrap-icons/lib/Eye/Eye.svelte","../../node_modules/svelte-bootstrap-icons/lib/Pencil/Pencil.svelte","../../node_modules/svelte-bootstrap-icons/lib/Trash/Trash.svelte","../../src/views/components/SelectList.svelte","../../node_modules/internmap/src/index.js","../../node_modules/d3-scale/src/init.js","../../node_modules/d3-scale/src/ordinal.js","../../node_modules/d3-scale-chromatic/src/colors.js","../../node_modules/d3-scale-chromatic/src/categorical/category10.js","../../src/views/components/Loading.svelte","../../src/views/components/forms/FormElement.svelte","../../src/views/components/forms/Select.svelte","../../src/views/components/forms/Toggle.svelte","../../src/views/components/forms/Text.svelte","../../src/views/components/forms/ColorPicker.svelte","../../src/views/pages/Taxonomies.svelte","../../src/lib/routes/root.ts","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.__svelte_spa_router_scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.__svelte_spa_router_scrollX, previousScrollState.__svelte_spa_router_scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","import { writable, derived } from \"svelte/store\";\nexport const types = [\n    // 'nnlm_de_norm',\n    // 'nnlm_de',\n    // 'nnlm_norm',\n    // 'nnlm',\n    // 'use_large',\n    // 'use_multi',\n    \"use\",\n];\nexport const files = [\n    \"cosine-cluster\",\n    \"cosine-tsne-5\",\n    \"cosine-tsne-cluster-5\",\n    \"cosine-tsne-20\",\n    \"cosine-tsne-cluster-20\",\n    \"cosine-tsne-50\",\n    \"cosine-tsne-cluster-50\",\n    \"euclidean-cluster\",\n    \"euclidean-tsne-5\",\n    \"euclidean-tsne-cluster-5\",\n    \"euclidean-tsne-20\",\n    \"euclidean-tsne-cluster-20\",\n    \"euclidean-tsne-50\",\n    \"euclidean-tsne-cluster-50\",\n    \"matrix-cosine-mini\",\n    \"matrix-euclidean-mini\",\n];\nexport const pcaVersions = {\n    'nnlm': [32, 64, null],\n    'use': [null],\n};\nexport const positionIds = [1, 3, 5, 8, 10, 12];\nexport const clusterIds = {\n    1: [0, 2],\n    3: [0, 4],\n    5: [0, 6],\n    8: [7, 9],\n    10: [7, 11],\n    12: [7, 13],\n};\nexport const matrixIds = [14, 15];\nexport const labels = writable([]);\nexport const clusterLabels = writable({});\nexport const ready = writable(false);\nexport const positions = writable([]);\n// Cluster for vis in small multiples\nexport const selectedCluster = writable(1);\nexport const selection = writable([]);\nexport const selectedPosition = writable(1);\n// Individual cluster within selected Cluster\nexport const selectedClusterDetails = writable(null);\nexport const selectedCustomClusterDetails = writable(null);\nexport const selectedMatrix = writable(0);\nexport const matrices = writable([]);\nexport const neighbors = writable([]);\nexport const neighborId = derived(selectedPosition, ($selectedPosition) => Math.floor($selectedPosition / positionIds.length));\nconst tsvLoader = (file) => {\n    return fetch(file)\n        .then((response) => response.text())\n        .then((tsv) => {\n        // remove empty last line\n        if (tsv.length - tsv.lastIndexOf(\"\\n\") === 1) {\n            tsv = tsv.substr(0, tsv.length - 1);\n        }\n        const lines = tsv.split(\"\\n\");\n        return lines.map((line) => line.split(\"\\t\"));\n    });\n};\nconst jsonLoader = (file) => {\n    return fetch(file)\n        .then((response) => response.json())\n        .then((json) => {\n        return json;\n    });\n};\nexport const load = async () => {\n    const metas = [];\n    const data = [];\n    for (let ti = 0; ti < types.length; ti += 1) {\n        let pcas = [];\n        Object.keys(pcaVersions).forEach((key) => {\n            if (types[ti].indexOf(key) > -1) {\n                pcas = pcaVersions[key];\n            }\n        });\n        for (let pi = 0; pi < pcas.length; pi += 1) {\n            metas.push({\n                pca: pcas[pi],\n                type: types[ti],\n            });\n            data.push([]);\n            for (let fi = 0; fi < files.length; fi += 1) {\n                data[data.length - 1].push(await tsvLoader(`./data/${pcas[pi] ? pcas[pi] + \"_\" : \"\"}${types[ti]}-${files[fi]}.tsv`));\n            }\n        }\n    }\n    const labelData = await tsvLoader(`./data/use-metadata.tsv`);\n    labels.set(labelData.map((lines) => lines[0]));\n    const tempClusterLabels = await jsonLoader(`./data/clusterLabels.json`);\n    clusterLabels.set(tempClusterLabels);\n    const tempPositions = [];\n    const tempMatrices = [];\n    data.forEach((d, di) => {\n        const tempMatricesGroup = [];\n        matrixIds.forEach((id) => {\n            tempMatricesGroup.push(d[id]);\n        });\n        tempMatrices.push(tempMatricesGroup);\n        positionIds.forEach((id) => {\n            const tempCoordinates = [];\n            const tempClusters = [];\n            const tempClusterLists = {};\n            d[id].forEach((line) => {\n                tempCoordinates.push([parseFloat(line[0]), parseFloat(line[1])]);\n            });\n            clusterIds[id].forEach((cid, cii) => {\n                const tempClusterList = [];\n                const tempClusterMap = {};\n                d[cid].forEach((cluster, ci) => {\n                    if (tempClusters.length < ci + 1) {\n                        tempClusters.push([]);\n                    }\n                    tempClusters[ci].push(parseInt(cluster[0]));\n                    if (!(cluster[0] in tempClusterMap)) {\n                        tempClusterList.push({\n                            key: parseInt(cluster[0]),\n                            count: 0,\n                        });\n                        tempClusterMap[cluster[0]] = tempClusterList.length - 1;\n                    }\n                    tempClusterList[tempClusterMap[cluster[0]]].count += 1;\n                });\n                tempClusterLists[cii] = tempClusterList;\n            });\n            tempPositions.push({\n                pca: metas[di].pca,\n                type: metas[di].type,\n                key: files[id],\n                positions: tempCoordinates,\n                clusters: tempClusters,\n                clusterLabels: tempClusterLabels[id],\n                clusterList: tempClusterLists,\n            });\n        });\n    });\n    positions.set(tempPositions);\n    matrices.set(tempMatrices);\n    ready.set(true);\n};\n","import { writable, derived } from \"svelte/store\";\nconst initTaxonomies = JSON.parse(localStorage.getItem(\"taxonomies\") || \"[]\").map(t => {\n    t.ids = t.ids.map(id => parseInt(id.toString()));\n    return t;\n});\nexport const taxonomies = writable(initTaxonomies);\ntaxonomies.subscribe((taxonomies) => {\n    localStorage.setItem(\"taxonomies\", JSON.stringify(taxonomies));\n});\nexport const taxonomyMap = derived(taxonomies, ($taxonomies) => {\n    const map = {};\n    $taxonomies.forEach((t, ti) => {\n        t.ids.forEach((id) => {\n            map[id] = ti;\n        });\n    });\n    return map;\n});\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","<script lang=\"ts\">\n  import { v4 as uuid } from \"uuid\";\n  import { onMount } from \"svelte\";\n  import { color as rgb } from \"d3-color\";\n  import { selectedCluster, selectedClusterDetails, selectedCustomClusterDetails, selectedPosition, positions as rawPositions } from \"../../stores/taxonomies\";\n  import { taxonomies, taxonomyMap } from \"../../stores/custom_taxonomies\";\n\n  export let index = 0;\n  export let setActiveIndex;\n  export let active: boolean;\n\n  export let type = \"\";\n  export let key = \"\";\n  $: label = `${type} - ${key}`;\n\n  export let clusterMode: boolean;\n\n  export let positions: [number, number][] = [];\n  export let clusters: number[][];\n  export let selected: number[] = [];\n  export let selectedNeighbors: number[] = [];\n  export let color: any;\n\n  let width = 150;\n  let height = 150;\n  let padding = 5;\n  const id = \"uuid_\" + uuid().split(\"-\").join(\"_\");\n  let min = [0, 0];\n  let max = [0, 0];\n\n  const x = (p: [number, number]): number => {\n    return (\n      padding + ((p[0] - min[0]) / (max[0] - min[0])) * (width - padding * 2)\n    );\n  };\n\n  const y = (p: [number, number]): number => {\n    return (\n      padding + ((p[1] - min[1]) / (max[1] - min[1])) * (height - padding * 2)\n    );\n  };\n\n  let ready = false;\n  onMount(() => {\n    ready = true;\n  });\n\n  const colorAlpha = (color: {r:number, g:number, b:number}, transparency: number) => {\n    return `rgba(${color.r},${color.g},${color.b},${transparency})`;\n  };\n\n  $: {\n    if (ready) {\n      const canvas = document.querySelector(`#${id}`) as HTMLCanvasElement;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, width, height);\n\n      min = [positions[0][0], positions[0][1]];\n      max = [positions[0][0], positions[0][1]];\n      positions.forEach((p) => {\n        if (p[0] < min[0]) {\n          min[0] = p[0];\n        }\n        if (p[1] < min[1]) {\n          min[1] = p[1];\n        }\n        if (p[0] > max[0]) {\n          max[0] = p[0];\n        }\n        if (p[1] > max[1]) {\n          max[1] = p[1];\n        }\n      });\n\n      positions.forEach((p, pi) => {\n        const pC = pi in $taxonomyMap\n          ? $taxonomies[$taxonomyMap[pi]].color\n          : [150,150,150,1];\n        const pColor = clusterMode\n          ? {r: pC[0], g: pC[1], b: pC[2]}\n          : pi < clusters.length && clusters[pi][$selectedCluster] >= 0\n            ? rgb(color(clusters[pi][$selectedCluster].toString()))\n            : {r: 150, g: 150, b: 150};\n\n        ctx.fillStyle =\n          clusterMode\n            ? $selectedCustomClusterDetails != null\n              ? $selectedCustomClusterDetails === $taxonomyMap[pi]\n                ? colorAlpha(pColor, 1)\n                : colorAlpha(pColor, 0.2)\n              : $selectedClusterDetails != null \n                ? $rawPositions[$selectedPosition].clusters[pi][$selectedCluster] === $selectedClusterDetails\n                  ? colorAlpha(pColor, 1)\n                  : colorAlpha(pColor, 0.2)\n                : colorAlpha(pColor, 1)\n            : $selectedClusterDetails != null\n              ? $selectedClusterDetails === clusters[pi][$selectedCluster] && $selectedPosition === index\n                ? colorAlpha(pColor, 1)\n                : $rawPositions[$selectedPosition].clusters[pi][$selectedCluster] === $selectedClusterDetails\n                  ? colorAlpha(pColor, 1)\n                  : colorAlpha(pColor, 0.2)\n              : $selectedCustomClusterDetails != null\n                ? pi in $taxonomyMap && $selectedCustomClusterDetails === $taxonomyMap[pi]\n                  ? colorAlpha(pColor, 1)\n                  : colorAlpha(pColor, 0.2)\n                : colorAlpha(pColor, 1);\n        ctx.beginPath();\n        ctx.arc(x(p), y(p), 1, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    }\n  }\n</script>\n\n<div\n  on:click={() => setActiveIndex(index)}\n  class=\"tsne-container\"\n  style=\"--tsne-width: {width}px; --tsne-height: {height}px;\"\n>\n  <div>\n    <canvas {id} {width} {height} />\n    <svg {width} {height}>\n      {#if ready}\n        {#each selectedNeighbors as s}\n          <circle\n            class=\"selection\"\n            cx={x(positions[s])}\n            cy={y(positions[s])}\n            r=\"3\"\n          />\n        {/each}\n        {#each selected as s}\n          <circle\n            class=\"selection\"\n            cx={x(positions[s])}\n            cy={y(positions[s])}\n            r=\"7\"\n          />\n        {/each}\n      {/if}\n    </svg>\n  </div>\n  <p><span class:active={active}>{label}</span></p>\n</div>\n\n<style lang=\"scss\">\n  @import \"../../styles/globals/colors\";\n\n  .tsne-container {\n    display: flex;\n    flex-direction: column;\n    & > div {\n      position: relative;\n      overflow: hidden;\n      width: var(--tsne-width);\n      height: var(--tsne-height);\n    }\n  }\n\n  canvas {\n    position: relative;\n    top: 0;\n    left: 0;\n  }\n\n  svg {\n    position: relative;\n    left: 0;\n    top: calc(-1 * var(--tsne-width));\n  }\n\n  circle.selection {\n    fill: rgba(255, 255, 255, 0.7);\n    stroke-width: 2px;\n    stroke: #000;\n  }\n\n  p {\n    padding-top: 0px;\n    padding-bottom: 0px;\n    margin-top:0px;\n    margin-bottom:8px;\n    display: block;\n    width: 100%;\n    text-align: center;\n  }\n\n  span {\n    font-size: 10px;\n    background-color: $color__accent-medium;\n    color: white;\n    border-radius: 10px;\n    padding: 2px 7px;\n    font-weight: bold;\n    &.active {\n      background-color: $color__accent-dark;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  export let label = \"\";\n  export let type = \"\";\n  export let bold = true;\n  export let back = false;\n  export let stretch = false;\n  export let invert = false;\n</script>\n\n<button on:click class={type} class:stretch class:invert>\n  {#if back}\n    <b>←</b>&nbsp;\n  {/if}\n  {#if bold}\n    <strong>{label}</strong>\n  {:else}\n    {label}\n  {/if}\n</button>\n","<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-eye={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"/>\n  <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\n</svg>","<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-pencil={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\n</svg>","<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-trash={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n  <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>","<script lang=\"ts\">\n  import Button from \"./forms/Button.svelte\";\n  import {Eye} from 'svelte-bootstrap-icons';\n  import { createEventDispatcher } from 'svelte';\n  import { v4 as uuid } from \"uuid\";\n  const id = uuid();\n\n  const dispatch = createEventDispatcher();\n\n  export const onHover = () => {};\n\n  export let data: {\n    label: string;\n    value: number | string;\n  }[] = [];\n  export let selection: (number | string)[] = [];\n\n  let lastIndex = null;\n  const click = (event, index: number, d: { label: string; value: number | string; }) => {\n    const tempSelection = selection;\n    console.log(lastIndex, event.shiftKey);\n    if (lastIndex !== null && lastIndex !== index && event.shiftKey) {\n      let action = \"add\";\n      if (tempSelection.includes(d.value)) {\n        action = \"remove\";\n      }\n      const indices = [index, lastIndex].sort((a, b) => a - b);\n      console.log(action, indices, tempSelection);\n      for (let i = indices[0]; i <= indices[1]; i += 1) {\n        if (action === \"add\") {\n          if (!tempSelection.includes(data[i].value)) {\n            tempSelection.push(data[i].value);\n          }\n        } else {\n          if (tempSelection.includes(data[i].value)) {\n            tempSelection.splice(tempSelection.indexOf(data[i].value), 1);\n          }\n        }\n      }\n    } else {\n      if (tempSelection.includes(d.value)) {\n        tempSelection.splice(tempSelection.indexOf(d.value), 1);\n      } else {\n        tempSelection.push(d.value);\n      }\n    }\n    selection = tempSelection;\n    lastIndex = index;\n  };\n\n  const resetSelection = () => {\n    selection = [];\n  };\n\n  const selectAll = () => {\n    const allSelection = [];\n    for (let i = 0; i < data.length; i += 1) {\n      allSelection.push(data[i].value);\n    }\n    selection = allSelection;\n  };\n</script>\n\n<ul>\n  {#each data as d, index}\n    <li\n      on:click={(e) => click(e, index, d)}\n      on:mouseover={() => {dispatch('over', d)}}\n      on:mouseout={() => {dispatch('out')}}\n      class:active={selection.includes(d.value)}\n    >\n      <input\n        type=\"checkbox\"\n        checked={selection.includes(d.value)}\n        value={d.value}\n        disabled\n        name=\"selection-{id}\"\n        id=\"selection-{id}-{index}\"\n      />\n      <label for=\"selection-{id}-{index}\">{@html d.label}</label>\n      <Eye on:click={(e) => {dispatch('setActivePosition', d.value); e.stopPropagation();}} />\n    </li>\n  {/each}\n</ul>\n<Button label=\"Select all\" on:click={() => selectAll()} />\n<Button label=\"Remove selection\" on:click={() => resetSelection()} />\n\n<style lang=\"scss\">\n  @import \"../../styles/globals/colors\";\n  @import \"../../styles/globals/layout\";\n\n  ul,\n  li {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    font-size: 12px;\n    width: 100%;\n    min-width: 0;\n  }\n  li {\n    * {\n      pointer-events: none;\n    }\n    cursor: pointer;\n    padding: 5px;\n    overflow: hidden;\n    width: 100%;\n    text-overflow: ellipsis;\n    display: block;\n    white-space: nowrap;\n    &:nth-child(even) {\n      background: transparent;\n    }\n    &:nth-child(odd) {\n      background: $color__accent-brightest;\n    }\n    &.active {\n      color: white;\n      background: $color__accent;\n    }\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n</style>\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","<script lang=\"ts\">\n  export let text = \"\";\n</script>\n\n<div class=\"loader\">\n  <img src=\"build/assets/images/svg/logo-animation.svg\" alt={text} />\n  <p>{text}</p>\n</div>\n","<script lang=\"ts\">\n  export let label = \"\";\n  export let description = \"\";\n  export let warning = \"\";\n  export let id = \"\";\n  export let tight = false;\n</script>\n\n<div class=\"form-el\" class:tight>\n  {#if label !== \"\"}\n    <label for={id}>{label}</label>\n  {/if}\n  {#if description !== \"\"}\n    <p>{description}</p>\n  {/if}\n  <slot />\n  {#if warning !== \"\"}\n    <p class=\"warning\">{warning}</p>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import FormElement from \"./FormElement.svelte\";\n\n  export let id = \"\";\n  export let warning = \"\";\n  export let label = \"\";\n  export let description = \"\";\n  export let value = \"\";\n  export let values: {\n    label: string;\n    value: number | string;\n  }[] = [];\n</script>\n\n<FormElement {label} {description} {id} {warning}>\n  <select bind:value>\n    <option disabled={true}>Please choose</option>\n    {#each values as item}\n      <option value={item.value}>{item.label}</option>\n    {/each}\n  </select>\n</FormElement>\n","<script lang=\"ts\">\n  import FormElement from \"./FormElement.svelte\";\n  export let id = \"\";\n  export let warning = \"\";\n  export let label = \"\";\n  export let description = \"\";\n  export let checked = false;\n  export let labelLeft = \"Ja\";\n  export let labelRight = \"Nein\";\n</script>\n\n<FormElement {label} {description} {id} {warning}>\n  <div class=\"toggle\">\n    <span class:inactive={checked}>{labelLeft}</span>\n    <label for={id}>\n      <input type=\"checkbox\" bind:checked {id} />\n      <span />\n    </label>\n    <span class:inactive={!checked}>{labelRight}</span>\n  </div>\n</FormElement>\n","<script lang=\"ts\">\n  import FormElement from \"./FormElement.svelte\";\n  export let id = \"\";\n  export let warning = \"\";\n  export let label = \"\";\n  export let description = \"\";\n  export let placeholder = \"\";\n  export let tight = false;\n  export let value = \"\";\n</script>\n\n<FormElement {label} {description} {id} {warning} {tight}>\n  <input type=\"text\" {placeholder} name={id} bind:value />\n</FormElement>\n","<script lang=\"ts\">\n  // https://github.com/efeskucuk/svelte-color-picker/blob/master/src/HsvPicker.svelte\n  import { onMount } from \"svelte\";\n  export let color: [number, number, number, number] = [0, 0, 0, 1];\n  export let hexValue: string = '#FF0000';\n\n  onMount(() => {\n    document.addEventListener(\"mouseup\", endEvents);\n    updateFromHex();\n  });\n\n  let csDrag = false;\n  let hueDrag = false;\n  let alphaDrag = false;\n  const endEvents = (): void => {\n    csDrag = false;\n    hueDrag = false;\n    alphaDrag = false;\n  };\n\n  const csWidth = 240;\n  const csHeight = 160;\n  const hueWidth = 220;\n  const alphaWidth = 220;\n\n  let h = 1;\n  let s = 1;\n  let v = 1;\n  let a = 1;\n  let r = 255;\n  let g = 0;\n  let b = 0;\n  $: hr = hsvToRgb(h, 1, 1)[0];\n  $: hg = hsvToRgb(h, 1, 1)[1];\n  $: hb = hsvToRgb(h, 1, 1)[2];\n\n  const updateFromHex = (): void => {\n    let hex = hexValue.replace(\"#\", \"\");\n    if (hex.length !== 6 && !hex.match(/([^A-F0-9])/gi)) {\n      let hexFiltered = \"\";\n      if (hex.length === 3) {\n        hex.split(\"\").forEach((c) => {\n          hexFiltered += c + c;\n        });\n      } else {\n        hexFiltered = hex;\n      }\n      r = parseInt(hexFiltered.substring(0, 2), 16);\n      g = parseInt(hexFiltered.substring(2, 4), 16);\n      b = parseInt(hexFiltered.substring(4, 6), 16);\n      const hsv = rgbToHSV(r, g, b);\n      h = hsv.h;\n      s = hsv.s;\n      v = hsv.v;\n      hueChange();\n      updateCsPicker();\n      updateHuePicker();      \n    }\n  };\n\n  const updateCsPicker = (): void => {\n    const csPicker: HTMLElement = document.querySelector(\"#colorsquare-picker\");\n    const xPercentage = s * 100;\n    const yPercentage = (1 - v) * 100;\n    csPicker.style.top = yPercentage + \"%\";\n    csPicker.style.left = xPercentage + \"%\";\n  };\n\n  const updateHuePicker = (): void => {\n    const huePicker: HTMLElement = document.querySelector(\"#hue-picker\");\n    const xPercentage = h * 100;\n    huePicker.style.left = xPercentage + \"%\";\n  };\n\n  const colorChangeCallback = (): void => {\n    color = [r, g, b, a];\n  };\n\n  \n  const csDown = () => {\n    csDrag = true;\n  };\n\n  const csMove = (event) => {\n    if (csDrag) {\n      s = event.layerX / csWidth;\n      v = 1 - event.layerY / csHeight;\n      updateCsPicker();\n      colorChange();\n    }\n  };\n\n  const hueDown = () => {\n    hueDrag = true;\n  };\n\n  const hueMove = (event) => {\n    if (hueDrag) {\n      const picker: HTMLElement = document.querySelector(\"#hue-picker\");\n      const xPercentage = event.layerX / hueWidth;\n      picker.style.left = (xPercentage * 100).toFixed(2) + \"%\";\n      h = xPercentage;\n      hueChange();\n    }\n  };\n\n  const alphaDown = () => {\n    alphaDrag = true;\n  };\n\n  const alphaMove = (event) => {\n    if (alphaDrag) {\n      const picker: HTMLElement = document.querySelector(\"#alpha-picker\");\n      const xPercentage = event.layerX / alphaWidth;\n      picker.style.left = (xPercentage * 100).toFixed(2) + \"%\";\n      a = xPercentage;\n      colorChange();\n    }\n  };\n\n  const hueChange = (): void => {\n    colorChange();\n  };\n\n  const colorChange = (): void => {\n    let rgb = hsvToRgb(h, s, v);\n    r = rgb[0];\n    g = rgb[1];\n    b = rgb[2];\n    hexValue = rgbaToHex();\n    colorChangeCallback();\n  };\n\n  // Math algorithms\n  const hsvToRgb = (h, s, v): [number, number, number] => {\n    let r, g, b;\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        (r = v), (g = t), (b = p);\n        break;\n      case 1:\n        (r = q), (g = v), (b = p);\n        break;\n      case 2:\n        (r = p), (g = v), (b = t);\n        break;\n      case 3:\n        (r = p), (g = q), (b = v);\n        break;\n      case 4:\n        (r = t), (g = p), (b = v);\n        break;\n      case 5:\n        (r = v), (g = p), (b = q);\n        break;\n    }\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  };\n\n  const rgbaToHex = (): string => {\n    let rHex = r.toString(16);\n    let gHex = g.toString(16);\n    let bHex = b.toString(16);\n\n    if (rHex.length == 1) rHex = \"0\" + rHex;\n    if (gHex.length == 1) gHex = \"0\" + gHex;\n    if (bHex.length == 1) bHex = \"0\" + bHex;\n    return (\"#\" + rHex + gHex + bHex).toUpperCase();\n  };\n\n  const rgbToHSV = (r: number, g: number, b: number): {\n    h: number;\n    s: number;\n    v: number;\n  } => {\n    let rperc, gperc, bperc, max, min, diff, pr, hnew, snew, vnew;\n    rperc = r / 255;\n    gperc = g / 255;\n    bperc = b / 255;\n    max = Math.max(rperc, gperc, bperc);\n    min = Math.min(rperc, gperc, bperc);\n    diff = max - min;\n    vnew = max;\n    vnew == 0 ? (snew = 0) : (snew = diff / max);\n    for (let i = 0; i < 3; i++) {\n      if ([rperc, gperc, bperc][i] === max) {\n        pr = i;\n        break;\n      }\n    }\n    if (diff == 0) {\n      hnew = 0;\n      return { h: hnew, s: snew, v: vnew };\n    } else {\n      switch (pr) {\n        case 0:\n          hnew = (60 * (((gperc - bperc) / diff) % 6)) / 360;\n          break;\n        case 1:\n          hnew = (60 * ((bperc - rperc) / diff + 2)) / 360;\n          break;\n        case 2:\n          hnew = (60 * ((rperc - gperc) / diff + 4)) / 360;\n          break;\n      }\n      if (hnew < 0) hnew += 6;\n    }\n    return { h: hnew, s: snew, v: vnew };\n  };\n</script>\n\n<div class=\"main-container\">\n  <div class=\"colorsquare size\" style=\"background-color:{`rgba(${hr},${hg},${hb},1)`};\">\n    <div class=\"saturation-gradient\">\n      <div class=\"value-gradient\">\n        <div id=\"colorsquare-picker\" />\n        <div\n          id=\"colorsquare-event\"\n          on:mousedown={csDown}\n          on:mousemove={csMove}\n        />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"hue-selector\">\n    <div id=\"hue-picker\" />\n    <div\n      id=\"hue-event\"\n      on:mousedown={hueDown}\n      on:mousemove={hueMove} />\n  </div>\n\n  <div class=\"alpha-selector\">\n    <div class=\"alpha-value\" />\n    <div id=\"alpha-picker\" />\n    <div\n      id=\"alpha-event\"\n      on:mousedown={alphaDown}\n      on:mousemove={alphaMove} />\n  </div>\n\n  <div class=\"color-info-box\">\n    <div class=\"color-picked-bg\">\n      <div class=\"color-picked\" style=\"background-color:rgba({r},{g},{b},{a})\" />\n    </div>\n\n    <div class=\"hex-text-block\">\n      <input class=\"hex\" type=\"text\" bind:value={hexValue} on:change={() => updateFromHex()} />\n    </div>\n\n    <div class=\"rgb-text-div\">\n      <div class=\"rgb-text-block\">\n        <input class=\"rgb\" type=\"number\" bind:value={r} min=\"0\" max=\"255\" on:change={() => colorChange()} />\n        <p class=\"text-label\">R</p>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <input class=\"rgb\" type=\"number\" bind:value={g} min=\"0\" max=\"255\" on:change={() => colorChange()} />\n        <p class=\"text-label\">G</p>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <input class=\"rgb\" type=\"number\" bind:value={b} min=\"0\" max=\"255\" on:change={() => colorChange()} />\n        <p class=\"text-label\">B</p>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <input class=\"rgb\" type=\"number\" bind:value={a} min=\"0\" max=\"255\" on:change={() => colorChange()} />\n        <p class=\"text-label\">A</p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .main-container {\n    width: 240px;\n    height: 265px;\n    background: #f2f2f2;\n    border-radius: 1px;\n    -webkit-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n    -moz-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  .saturation-gradient {\n    background: linear-gradient(\n      to right,\n      rgb(255, 255, 255),\n      rgba(255, 255, 255, 0)\n    );\n    width: 240px;\n    height: 160px;\n  }\n  .value-gradient {\n    background: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n    overflow: hidden;\n    width: 240px;\n    height: 160px;\n  }\n  .hue-selector {\n    background: linear-gradient(\n      to right,\n      #ff0000 0%,\n      #ffff00 17%,\n      #00ff00 33%,\n      #00ffff 50%,\n      #0000ff 67%,\n      #ff00ff 83%,\n      #ff0000 100%\n    );\n    margin: 15px 10px 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n  }\n  #hue-picker {\n    background: #fff;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    left: 0%;\n    position: relative;\n    cursor: default;\n    transform: translate(-5px, -1px);\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    -moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n  }\n  #hue-event {\n    width: 236px;\n    height: 14px;\n    transform: translate(-8px, -14px);\n    cursor: default;\n    touch-action: none;\n  }\n  .alpha-selector {\n    background-image: linear-gradient(45deg, #808080 25%, transparent 25%),\n      linear-gradient(-45deg, #808080 25%, transparent 25%),\n      linear-gradient(45deg, transparent 75%, #808080 75%),\n      linear-gradient(-45deg, transparent 75%, #808080 75%);\n    background-size: 10px 10px;\n    background-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n    margin: 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n    position: relative;\n  }\n  #alpha-picker {\n    background: #fff;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    left: 100%;\n    position: relative;\n    cursor: default;\n    transform: translate(-5px, -11px);\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    -moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n  }\n  #alpha-event {\n    width: 236px;\n    height: 14px;\n    transform: translate(-8px, -24px);\n    cursor: default;\n    touch-action: none;\n  }\n  .alpha-value {\n    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1));\n    width: 100%;\n    height: 100%;\n    border-radius: 10px;\n  }\n  .colorsquare {\n    background: rgb(255, 0, 0);\n  }\n  #colorsquare-picker {\n    margin: 0;\n    padding: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid #fffb;\n    position: relative;\n    transform: translate(-9px, -9px);\n    left: 100%;\n  }\n  #colorsquare-event {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    transform: translate(0, -16px);\n    touch-action: none;\n  }\n  .color-info-box {\n    margin: 10px;\n    width: 100%;\n    height: 22px;\n    vertical-align: middle;\n    position: relative;\n  }\n  .color-picked {\n    width: 18px;\n    height: 18px;\n    border-radius: 2px;\n    background: rgba(255, 0, 0, 1);\n    display: inline-block;\n  }\n  .color-picked-bg {\n    background-image: linear-gradient(45deg, #808080 25%, transparent 25%),\n      linear-gradient(-45deg, #808080 25%, transparent 25%),\n      linear-gradient(45deg, transparent 75%, #808080 75%),\n      linear-gradient(-45deg, transparent 75%, #808080 75%);\n    background-size: 10px 10px;\n    background-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n    border: 2px solid #fff;\n    border-radius: 4px;\n    width: 18px;\n    height: 18px;\n    color: #fff;\n    display: inline-block;\n  }\n  .hex-text-block {\n    display: inline-block;\n    background: white;\n    border-radius: 2px;\n    padding: 2px;\n    border: 1px solid #e3e3e3;\n    height: 16px;\n    width: 54px;\n    vertical-align: top;\n    text-align: center;\n  }\n  .rgb-text-block {\n    display: inline-block;\n    background: white;\n    border-radius: 2px;\n    padding: 2px;\n    margin: 0 1px;\n    border: 1px solid #dcdcdc;\n    height: 16px;\n    width: 23px;\n    vertical-align: top;\n    text-align: center;\n  }\n  .rgb-text-div {\n    right: 10%;\n    display: inline-block;\n    vertical-align: top;\n    position: absolute;\n  }\n  .text-label {\n    position: relative;\n    top: -12px;\n    font-family: sans-serif;\n    font-size: small;\n    color: #888;\n  }\n  input {\n    border: 1px solid black;\n    border-radius: 2px;\n    font-family: sans-serif;\n    margin: 0;\n    display: inline-block;\n    font-size: 12px;\n    font-size-adjust: 0.5;\n  }\n  input.hex {\n    width: 50px;\n  }\n  input.rgb {\n    width: 20px;\n  }\n</style>\n","<script lang=\"ts\">\n  import {\n    load,\n    ready,\n    neighborId,\n    matrices,\n    selectedMatrix,\n    neighbors,\n    positions,\n    labels,\n    selection,\n    selectedPosition,\n    selectedCluster,\n    selectedClusterDetails,\n    selectedCustomClusterDetails,\n    clusterLabels as clusterLabelsData\n  } from \"../../stores/taxonomies\";\n  import { taxonomies, taxonomyMap } from \"../../stores/custom_taxonomies\";\n  import TSNE from \"../components/TSNE.svelte\";\n  import SelectList from \"../components/SelectList.svelte\";\n  import { onMount } from \"svelte\";\n  import { scaleOrdinal } from \"d3-scale\";\n  import { schemeCategory10 } from \"d3-scale-chromatic\";\n  import Loading from \"../components/Loading.svelte\";\n  import Select from \"../components/forms/Select.svelte\";\n  import Toggle from \"../components/forms/Toggle.svelte\";\n  import Text from \"../components/forms/Text.svelte\";\n  import Button from \"../components/forms/Button.svelte\";\n  import ColorPicker from \"../components/forms/ColorPicker.svelte\";\n  import type {Taxonomy} from \"../../stores/custom_taxonomies\";\n  import {Pencil, Trash} from 'svelte-bootstrap-icons';\n\n  onMount(() => {\n    if (!$ready) {\n      load();\n    }\n  });\n\n  $: localReady = $ready;\n\n  $: clusters = $ready\n    ? $positions[$selectedPosition].clusterList[$selectedCluster].sort(\n        (a, b) => b.count - a.count\n      )\n    : [];\n  $: clusterLabels =\n    $ready && $selectedClusterDetails != null\n      ? $labels.map((l, li) => {\n        return {\n          label: l,\n          value: li\n        };\n      }).filter((l, li) => {\n          return (\n            $positions[$selectedPosition].clusters[li][$selectedCluster] ===\n            $selectedClusterDetails\n          );\n        })\n      : $ready && $selectedCustomClusterDetails != null\n      ? $taxonomies[$selectedCustomClusterDetails].ids.map((l) => {\n        return {\n          label: $labels[l],\n          value: l\n        };\n      })\n      : [];\n  let clusterSelection = [];\n  let neighborSelection = [];\n\n  const setActiveIndex = (index) => {\n    selectedClusterDetails.set(null);\n    selectedPosition.set(index);\n  };\n\n  const setSelectedClusterDetails = (index) => {\n    clusterSelection = [];\n    if (index === $selectedClusterDetails) {\n      index = null;\n    } else {\n      selectedCustomClusterDetails.set(null);\n    }\n    selectedClusterDetails.set(index);\n  };\n\n  const setSelectedCustomClusterDetails = (index) => {\n    clusterSelection = [];\n    if (index === $selectedCustomClusterDetails) {\n      index = null;\n    } else {\n      selectedClusterDetails.set(null);\n    }\n    selectedCustomClusterDetails.set(index);\n  };\n\n  let hoverPosition: number = null;\n  const setHoverPosition = (index) => {\n    hoverPosition = index;\n  };\n\n  let activePosition: number = null;\n  const setActivePosition = (index) => {\n    console.log(index);\n    if (index) {\n      activePosition = index;\n      selection.set([index]);\n      neighbors.set($matrices[$neighborId][$selectedMatrix][index]);\n    } else {\n      activePosition = null;\n      selection.set([]);\n      neighbors.set([]);\n    }\n  };\n\n  const color = scaleOrdinal(schemeCategory10);\n  let min = [0, 0];\n  let max = [0, 0];\n  const width = 800;\n  const height = 800;\n  const padding = 20;\n\n  const x = (p: [number, number]): number => {\n    return (\n      padding + ((p[0] - min[0]) / (max[0] - min[0])) * (width - padding * 2)\n    );\n  };\n\n  const y = (p: [number, number]): number => {\n    return (\n      padding + ((p[1] - min[1]) / (max[1] - min[1])) * (height - padding * 2)\n    );\n  };\n\n  $: {\n    if ($ready) {\n      min = [\n        $positions[$selectedPosition].positions[0][0],\n        $positions[$selectedPosition].positions[0][1],\n      ];\n      max = [\n        $positions[$selectedPosition].positions[0][0],\n        $positions[$selectedPosition].positions[0][1],\n      ];\n      $positions[$selectedPosition].positions.forEach((p) => {\n        if (p[0] < min[0]) {\n          min[0] = p[0];\n        }\n        if (p[1] < min[1]) {\n          min[1] = p[1];\n        }\n        if (p[0] > max[0]) {\n          max[0] = p[0];\n        }\n        if (p[1] > max[1]) {\n          max[1] = p[1];\n        }\n      });\n    }\n  }\n\n  let assign = false;\n  let newClusterName = \"\";\n  let existingCluster = \"\";\n  let assignId: number[] = null;\n  let editMode: boolean = false;\n  let editId: number = null;\n  let newClusterColor: [number, number, number, number] = [0,0,0,1];\n\n  $: if (!assign) {\n    newClusterName = \"\";\n    existingCluster = null;\n  }\n\n  const colorFunc = (\n    pi: number,\n    _selectedPosition: number,\n    _selectedCluster: number,\n    clusterMode: boolean,\n    _taxonomies,\n    _taxonomyMap\n  ): string => {\n    if (!clusterMode) {\n      return $positions[_selectedPosition].clusters[pi][_selectedCluster] >= 0\n        ? color(\n            $positions[_selectedPosition].clusters[pi][\n              _selectedCluster\n            ].toString()\n          )\n        : \"rgba(150,150,150,1)\";\n    } else {\n      return pi in _taxonomyMap ? `rgba(${_taxonomies[_taxonomyMap[pi]].color.join(',')})` : 'rgba(150,150,150,1)';\n    }\n  };\n\n  const removeIdsFromTax = (ids: number[]) => {\n    const refreshTax = {};\n    ids.forEach(id => {\n      $taxonomies.forEach((t, ti) => {\n        if (t.ids.includes(id)) {\n          if (!(ti in refreshTax)) {\n            refreshTax[ti] = t.ids;\n          }\n          refreshTax[ti].splice(refreshTax[ti].indexOf(id, 1));\n        }\n      });\n    });\n    Object.keys(refreshTax).forEach(key => {\n      $taxonomies[key].ids = refreshTax[key];\n    });\n  };\n\n  const saveSingleTaxonomy = () => {\n    if (existingCluster !== null && existingCluster !== '') {\n      const clusterIds = $taxonomies[existingCluster].ids;\n      clusterIds.push(activePosition);\n      $taxonomies[existingCluster].ids = clusterIds;\n    } else {\n      const newTaxonomy: Taxonomy = {\n        name: newClusterName,\n        color: [255,0,0,1],\n        ids: [activePosition]\n      };\n      const tempTaxonomies = $taxonomies;\n      tempTaxonomies.push(newTaxonomy);\n      $taxonomies = tempTaxonomies;\n    }\n  };\n\n  const saveTaxonomy = () => {\n    if (editMode) {\n      const tempTaxonomy = $taxonomies[editId];\n      tempTaxonomy.name = newClusterName;\n      tempTaxonomy.color = newClusterColor;\n      $taxonomies[editId] = tempTaxonomy;\n    } else {\n      if (assignId.length > 0) {\n        removeIdsFromTax(assignId);\n        if (existingCluster !== null && existingCluster !== '') {\n          const clusterIds = $taxonomies[existingCluster].ids;\n          assignId.forEach(id => {\n            if (!clusterIds.includes(id)) {\n              clusterIds.push(id);\n            }\n          });\n          $taxonomies[existingCluster].ids = clusterIds;\n        } else {\n          const newTaxonomy: Taxonomy = {\n            name: newClusterName,\n            color: newClusterColor,\n            ids: assignId\n          };\n          const tempTaxonomies = $taxonomies;\n          tempTaxonomies.push(newTaxonomy);\n          $taxonomies = tempTaxonomies;\n        }\n      }\n    }\n    assign = false;\n  };\n\n  let clusterMode = false;\n\n  const deleteTaxonomy = (id: number) => {\n    const tempTaxonomies = $taxonomies;\n    tempTaxonomies.splice(id, 1);\n    $taxonomies = tempTaxonomies;\n  };\n\n  const editTaxonomy = (id: number) => {\n    editMode = true;\n    newClusterName = $taxonomies[id].name;\n    newClusterColor = $taxonomies[id].color;\n    existingCluster = \"\";\n    editId = id;\n    assign = true;\n  };\n\n  const removeFromTaxonomy = (taxId: number, ids: number[]) => {\n    const tempIds = $taxonomies[taxId].ids;\n    ids.forEach(id => {\n      const idx = tempIds.indexOf(id);\n      if (idx >= 0) {\n        tempIds.splice(idx, 1);\n      }\n    });\n    $taxonomies[taxId].ids = tempIds;\n  };\n</script>\n\n{#if localReady}\n  <div id=\"taxonomyViews\">\n    {#each $positions as position, index}\n      <TSNE\n        active={$selectedPosition === index ? true : false}\n        selected={$selection}\n        selectedNeighbors={$neighbors}\n        positions={position.positions}\n        clusters={position.clusters}\n        type={position.type}\n        key={position.key}\n        clusterMode={clusterMode}\n        color={color}\n        {setActiveIndex}\n        {index}\n      />\n    {/each}\n  </div>\n  <div id=\"editor\">\n    <div id=\"clusterView\">\n      <div>\n        <div class=\"title-group\">\n          <h2>Clusters</h2>\n          {#if $selectedClusterDetails}\n          <Button\n            label=\"Reset selection\"\n            on:click={() => setSelectedClusterDetails(null)}\n          />\n          {/if}\n        </div>\n        <ul>\n          {#each clusters as cluster, index}\n            <li\n              class:active={$selectedClusterDetails === cluster.key}\n              on:click={() => setSelectedClusterDetails(cluster.key)}\n              id=\"cluster-item-{index}\"\n            >\n              <span\n                class=\"cluster-indicator\"\n                style=\"background-color:{color(cluster.key.toString())}\"\n              />\n              {$positions[$selectedPosition].clusterLabels[cluster.key]}&nbsp;<span>{cluster.count}</span>\n            </li>\n          {/each}\n        </ul>\n      </div>\n      {#if $selectedClusterDetails != null}\n        <div>\n          <h2>Labels in <span class=\"cluster-indicator large\" style=\"background-color:{color($selectedClusterDetails.toString())}\"></span>&nbsp;{$positions[$selectedPosition].clusterLabels[$selectedClusterDetails]}</h2>\n          <SelectList\n            on:over={(d) => {setHoverPosition(d.detail.value);}}\n            on:out={() => {setHoverPosition(null);}}\n            data={clusterLabels}\n            bind:selection={clusterSelection}\n            on:setActivePosition={(e) => {setActivePosition(e.detail);}}\n          />\n          <Button\n            label=\"Assign to cluster\"\n            on:click={() => {\n              assignId = clusterSelection;\n              editMode = false;\n              assign = true;\n            }}\n          />\n        </div>\n      {/if}\n      {#if $selectedCustomClusterDetails != null}\n        <div>\n          <h2>Labels in <span class=\"cluster-indicator large\" style=\"background-color:rgb({$taxonomies[$selectedCustomClusterDetails].color.join(',')})\"></span>&nbsp;{$taxonomies[$selectedCustomClusterDetails].name}</h2>\n          <SelectList\n            on:over={(d) => {setHoverPosition(d.detail.value);}}\n            on:out={() => {setHoverPosition(null);}}\n            data={clusterLabels}\n            bind:selection={clusterSelection}\n          />\n          <Button\n            label=\"Remove from cluster\"\n            on:click={() => {\n              removeFromTaxonomy($selectedCustomClusterDetails, clusterSelection);\n            }}\n          />\n        </div>\n      {/if}\n    </div>\n    <div id=\"dataView\">\n      <div style=\"height:32px;\">\n        <Toggle\n            id=\"distanceToggle\"\n            labelLeft=\"ML Cluster\"\n            labelRight=\"Custom Cluster\"\n            bind:checked={clusterMode} />\n        {#if activePosition}\n        <Button\n          label=\"Reset selection\"\n          on:click={() => setActivePosition(null)}\n        />\n        {/if}\n      </div>\n      <svg {width} {height} viewBox=\"0 0 {width} {height}\">\n        <defs>\n          <filter x=\"0\" y=\"0\" width=\"1\" height=\"1\" id=\"solid\">\n            <feFlood flood-color=\"#f3f7ff\" result=\"bg\" />\n            <feMerge>\n              <feMergeNode in=\"bg\"/>\n              <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n          </filter>\n        </defs>\n        {#each $positions[$selectedPosition].positions as p, pi}\n          <circle\n            on:mouseover={() => setHoverPosition(pi)}\n            on:mouseout={() => setHoverPosition(null)}\n            on:click={() => setActivePosition(pi)}\n            cx={x(p)}\n            cy={y(p)}\n            r=\"3\"\n            fill={colorFunc(pi, $selectedPosition, $selectedCluster, clusterMode, $taxonomies, $taxonomyMap)}\n            class:inactive={($selectedClusterDetails != null &&\n              $positions[$selectedPosition].clusters[pi][$selectedCluster] !==\n                $selectedClusterDetails) || ($selectedCustomClusterDetails !== null &&\n                $selectedCustomClusterDetails !== $taxonomyMap[pi]\n                )}\n            class:active={$selectedClusterDetails != null &&\n              $positions[$selectedPosition].clusters[pi][$selectedCluster] ===\n                $selectedClusterDetails}\n          />\n        {/each}\n        {#if hoverPosition != null}\n          <circle\n            class=\"highlighter\"\n            cx={x($positions[$selectedPosition].positions[hoverPosition])}\n            cy={y($positions[$selectedPosition].positions[hoverPosition])}\n            r=\"6\"\n          />\n          <text\n            filter=\"url(#solid)\"\n            transform=\"translate({8+x(\n              $positions[$selectedPosition].positions[hoverPosition]\n            )},{5+y($positions[$selectedPosition].positions[hoverPosition])})\"\n            text-anchor=\"start\">{$labels[hoverPosition]}</text\n          >\n        {/if}\n        {#if $selection.length > 0}\n          {#each $selection as s}\n            <circle\n              class=\"highlighter\"\n              cx={x($positions[$selectedPosition].positions[s])}\n              cy={y($positions[$selectedPosition].positions[s])}\n              r=\"6\"\n            />\n          {/each}\n        {/if}\n        {#if $selection.length > 0}\n          {#each $neighbors as s}\n            <circle\n              class=\"small-highlighter\"\n              cx={x($positions[$selectedPosition].positions[s])}\n              cy={y($positions[$selectedPosition].positions[s])}\n              r=\"4\"\n            />\n          {/each}\n        {/if}\n      </svg>\n    </div>\n    <div id=\"neighborView\">\n      {#if $selection.length > 0}\n        <div>\n          <h2>Selection</h2>\n          <table>\n            <tr>\n              <th>ID</th>\n              <td>{$selection[0]}</td>\n            </tr>\n            <tr>\n              <th>Label</th>\n              <td>{$labels[$selection[0]]}</td>\n            </tr>\n            {#if $positions[$selectedPosition].clusters[$selection[0]][$selectedCluster] >= 0}\n              <tr>\n                <th>Cluster</th>\n                <td\n                  on:click={() =>\n                    setSelectedClusterDetails(\n                      $positions[$selectedPosition].clusters[$selection[0]][\n                        $selectedCluster\n                      ]\n                    )}\n                  >{$positions[$selectedPosition].clusterLabels[$positions[$selectedPosition].clusters[$selection[0]][$selectedCluster]]}</td>\n              </tr>\n            {/if}\n            {#if $selection[0] in $taxonomyMap}\n              <tr>\n                <th>Custom Cluster</th>\n                <td>{$taxonomies[$taxonomyMap[$selection[0]]].name}</td>\n              </tr>\n            {/if}\n          </table>\n          <hr />\n          <div class=\"small-form\">\n          <Select\n            label=\"Choose existing cluster\"\n            bind:value={existingCluster}\n            values={[{\n              label: 'Create new cluster',\n              value: null,\n            }].concat($taxonomies.map((t, ti) => {\n              return {\n                label: t.name,\n                value: ti,\n              };\n            }))}\n          />\n          <Text\n            label=\"New cluster name\"\n            placeholder=\"Name\"\n            bind:value={newClusterName}\n          />\n          <Button\n            label=\"Save\"\n            bold={true}\n            on:click={saveSingleTaxonomy}\n          />\n        </div>\n        </div>\n      {/if}\n      {#if $selection.length > 0}\n        <div>\n          <h2>Neighbors</h2>\n          <SelectList\n            on:over={(d) => {setHoverPosition(d.detail.value);}}\n            on:out={() => {setHoverPosition(null);}}\n            data={$neighbors.map(n => {\n              return {\n                label: `<span\n                  class=\"cluster-indicator\"\n                  style=\"background-color:${colorFunc(\n                    n,\n                    $selectedPosition,\n                    $selectedCluster,\n                    clusterMode,\n                    $taxonomies,\n                    $taxonomyMap\n                  )}\"\n                ></span>&nbsp;${$labels[n]}`,\n                value: n\n              };\n            })}\n            bind:selection={neighborSelection}\n          />\n          <Button\n            label=\"Assign to cluster\"\n            on:click={() => {\n              assignId = neighborSelection;\n              editMode = false;\n              assign = true;\n            }}\n          />\n        </div>\n      {/if}\n      <div id=\"custom-clusters\">\n        <div class=\"title-group\">\n          <h2>Custom Clusters</h2>\n          {#if $selectedCustomClusterDetails}\n          <Button\n            label=\"Reset selection\"\n            on:click={() => setSelectedCustomClusterDetails(null)}\n          />\n          {/if}\n        </div>\n        <ul>\n          {#each $taxonomies as t, ti}\n            <li class:active={$selectedCustomClusterDetails === ti}>\n              <span on:click={() => {setSelectedCustomClusterDetails(ti)}}>\n                <span\n                  class=\"cluster-indicator\"\n                  style=\"background-color:rgba({t.color.join(',')})\"\n                />{t.name}<span>{t.ids.length}</span>\n              </span>\n              <span class=\"edit-links\">\n                <Pencil on:click={() => editTaxonomy(ti)} />\n                <Trash on:click={() => deleteTaxonomy(ti)} />\n              </span>\n            </li>\n          {/each}\n        </ul>\n      </div>\n    </div>\n  </div>\n  {#if assign}\n    <div id=\"assignment\" class=\"view\">\n      {#if !editMode}\n      <Select\n        label=\"Choose existing cluster\"\n        bind:value={existingCluster}\n        values={[{\n          label: 'Create new cluster',\n          value: null,\n        }].concat($taxonomies.map((t, ti) => {\n          return {\n            label: t.name,\n            value: ti,\n          };\n        }))}\n      />\n      {/if}\n      <Text\n        label=\"New cluster name\"\n        placeholder=\"Name\"\n        bind:value={newClusterName}\n      />\n      <ColorPicker bind:color={newClusterColor} />\n      <Button\n        label=\"Cancel\"\n        on:click={() => {\n          assign = false;\n        }}\n        invert={true}\n      />\n      <Button\n        label=\"Save\"\n        bold={true}\n        on:click={saveTaxonomy}\n      />\n    </div>\n  {/if}\n{:else}\n  <Loading text=\"Loading data...\" />\n{/if}\n\n<style lang=\"scss\">\n  @import \"../../styles/globals/colors\";\n  @import \"../../styles/globals/layout\";\n\n  #assignment {\n    position: fixed;\n    left: 50%;\n    top: 100px;\n    max-height: calc(100vh - 200px);\n    margin-left: -200px;\n    width: 400px;\n    overflow-y: scroll;\n  }\n\n  #taxonomyViews {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  #editor {\n    height: calc(100vh - 195px);\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    & > div {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n\n  #clusterView {\n    flex-basis: 25%;\n    flex-grow: 1;\n    align-items: stretch;\n    align-content: stretch;\n    min-width: 0;\n    ul,\n    li {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      font-size: 12px;\n      width: 100%;\n      min-width: 0;\n    }\n    li {\n      padding: 5px;\n      overflow: hidden;\n      width: 100%;\n      text-overflow: ellipsis;\n      display: block;\n      white-space: nowrap;\n      &:nth-child(even) {\n        background: transparent;\n      }\n      &:nth-child(odd) {\n        background: $color__accent-brightest;\n      }\n      span {\n        background-color: $color__accent-bright;\n        border-radius: 10px;\n        padding: 1px 5px;\n        font-weight: normal;\n        &.cluster-indicator{\n          padding:4px;\n        }\n      }\n      &.active {\n        color: white;\n        background: $color__accent;\n        span {\n          color: black;\n        }\n      }\n    }\n    & > div {\n      @include view;\n      flex-grow: 1;\n      flex-shrink: 1;\n      flex-basis: 50%;\n      overflow-y: scroll;\n    }\n  }\n\n  #dataView {\n    flex-grow: 2;\n    flex-basis: 50%;\n    svg {\n      width: 100%;\n      height: 100%;\n      text {\n        pointer-events: none;\n      }\n      circle {\n        cursor: pointer;\n      }\n    }\n    circle.highlighter {\n      pointer-events: none;\n      fill: transparent;\n      stroke: black;\n    }\n    circle.small-highlighter {\n      pointer-events: none;\n      fill: transparent;\n      stroke: rgba(0, 0, 0, 0.5);\n    }\n    circle.inactive {\n      opacity: 0.2;\n    }\n  }\n\n  #custom-clusters {\n    ul,\n    li {\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      font-size: 12px;\n      width: 100%;\n      min-width: 0;\n    }\n    li {\n      padding: 5px;\n      overflow: hidden;\n      width: 100%;\n      text-overflow: ellipsis;\n      display: block;\n      white-space: nowrap;\n      display:flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items:center;\n      &:nth-child(even) {\n        background: transparent;\n      }\n      &:nth-child(odd) {\n        background: $color__accent-brightest;\n      }\n      &.active {\n        color: white;\n        background: $color__accent;\n        span {\n          color: white;\n          span {\n            color: black\n          }\n        }\n      }\n      span span{\n        margin-right:5px;\n        margin-left:3px;\n      }\n    }\n  }\n\n  #neighborView {\n    flex-basis: 25%;\n    flex-grow: 1;\n    align-items: stretch;\n    align-content: stretch;\n    min-width: 0;\n    & > div {\n      @include view;\n      overflow-y: scroll;\n      flex-grow: 1;\n      flex-shrink: 1;\n      flex-basis: 50%;\n    }\n    li > span > span:not(.cluster-indicator) {\n      background-color: $color__accent-bright;\n      border-radius: 10px;\n      padding: 1px 5px;\n      font-weight: normal;\n    }\n  }\n\n  h2 {\n    padding-bottom: 10px;\n  }\n\n  .cluster-indicator{\n    border-radius: 10px;\n    padding: 4px;\n    width: 1px;\n    height: 1px;\n    display: inline-block;\n    line-height:0;\n    &.large {\n      padding:6px;\n    }\n  }\n\n  .title-group{\n    display:flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  #dataView>div{\n    display:flex;\n    flex-direction: row;\n    justify-content: space-between;\n    .form-el{\n      padding-bottom:0px;\n    }\n  }\n</style>\n","import Taxonomies from \"../../views/pages/Taxonomies.svelte\";\nexport const routes = {\n    \"/\": Taxonomies,\n};\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","set_store_value","ret","value","set","current_component","is_hydrating","upper_bound","low","high","key","mid","append","target","node","hydrate_init","children","childNodes","m","Int32Array","longest","seqLen","idx","claim_order","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert","detach","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_svg_attributes","attributes","to_number","set_data","wholeText","set_input_value","input","set_style","important","style","setProperty","select_option","select","option","__value","selected","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","add_flush_callback","flushing","seen_callbacks","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","bind","index","bound","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","fill","make_dirty","hydrate","nodes","Array","from","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","params","routes","prefix","restoreScrollState","RouteItem","constructor","path","_sveltesparouter","charAt","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","parse","conditions","userData","_pattern","_keys","match","startsWith","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","popStateChanged","state","__svelte_spa_router_scrollY","scrollTo","__svelte_spa_router_scrollX","lastLoc","componentObj","unsubscribeLoc","newLoc","checkConditions","loading","loadingParams","loaded","default","onDestroy","history","scrollRestoration","types","files","pcaVersions","nnlm","use","positionIds","clusterIds","matrixIds","labels","clusterLabels","positions","selectedCluster","selection","selectedPosition","selectedClusterDetails","selectedCustomClusterDetails","selectedMatrix","matrices","neighbors","neighborId","$selectedPosition","floor","tsvLoader","file","fetch","response","tsv","lastIndexOf","line","load","async","metas","ti","pcas","pi","pca","fi","labelData","lines","tempClusterLabels","json","tempPositions","tempMatrices","di","tempMatricesGroup","id","tempCoordinates","tempClusters","tempClusterLists","parseFloat","cid","cii","tempClusterList","tempClusterMap","cluster","ci","parseInt","count","clusters","clusterList","taxonomies","JSON","localStorage","getItem","t","ids","toString","setItem","stringify","taxonomyMap","$taxonomies","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","validate","uuid","REGEX","test","byteToHex","v4","buf","offset","rnds","random","arguments","toLowerCase","TypeError","factory","prototype","extend","parent","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","trim","rgbn","Rgb","rgba","hsla","hasOwnProperty","NaN","g","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","clampa","clampi","isNaN","min","round","h","Hsl","hslConvert","clamph","clampt","hsl2rgb","m1","m2","width","height","define","copy","channels","displayable","formatHex8","formatHsl","pow","clamp","setActiveIndex","active","clusterMode","selectedNeighbors","join","x","padding","y","colorAlpha","transparency","label","querySelector","getContext","clearRect","pC","$taxonomyMap","pColor","$selectedCluster","fillStyle","$selectedCustomClusterDetails","$selectedClusterDetails","$rawPositions","beginPath","arc","PI","bold","back","stretch","invert","includes","lastIndex","click","tempSelection","console","log","shiftKey","action","indices","resetSelection","selectAll","allSelection","stopPropagation","InternMap","entries","keyof","super","defineProperties","_intern","_key","get","intern_get","intern_set","intern_delete","valueOf","initRange","domain","range","implicit","Symbol","ordinal","unknown","scale","_","apply","specifier","colors","description","warning","tight","selected_option","checked","labelLeft","labelRight","placeholder","hexValue","endEvents","updateFromHex","csDrag","hueDrag","alphaDrag","v","replace","hexFiltered","hsv","rgbToHSV","hueChange","updateCsPicker","updateHuePicker","csPicker","xPercentage","yPercentage","top","left","huePicker","colorChange","hsvToRgb","rgbaToHex","f","q","rHex","gHex","bHex","toUpperCase","rperc","gperc","bperc","diff","pr","hnew","snew","vnew","hr","hg","hb","layerX","layerY","picker","toFixed","concat","$ready","clusterSelection","neighborSelection","setSelectedClusterDetails","setSelectedCustomClusterDetails","hoverPosition","setHoverPosition","activePosition","setActivePosition","$matrices","$neighborId","$selectedMatrix","scaleOrdinal","schemeCategory10","newClusterName","existingCluster","assignId","editMode","editId","newClusterColor","colorFunc","_selectedPosition","_selectedCluster","_taxonomies","_taxonomyMap","$positions","deleteTaxonomy","tempTaxonomies","editTaxonomy","removeFromTaxonomy","taxId","tempIds","localReady","$labels","li","newTaxonomy","tempTaxonomy","refreshTax","removeIdsFromTax","$selection","body"],"mappings":"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"}